学习目录
1.apt
     1.2.软件升级
     1.3.卸载软件
     1.4.软件搜索
1
2
3
2.dpkg
   2.1使用dpkg安装deb软件包
   2.2查看已安装软件包的安装目录
   2.3从二进制包安装
——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
1.apt
APT是advance packaging tool （高级包装工具）的缩写，可以自动下载，配置，安装二进制或者源代码格式的软件包。
安装过程：在本地数据库中搜索关于软件的相关信息→根据这些信息在相关服务器上下载软件安装。
Q:为什么要在本地服务器搜索？
A：我们需要定期从服务器下载一个软件包列表（sudo apt-get update）来保持本地的软件包列表是最新的。而这个表里会有软件依赖信息的记录。

apt-get工具
1.apt-get install：在后面加上软件包名，用来安装一个软件包。
2.apt-get update：从软件源镜像服务器上下载/更新用于更新本地的软件源的软件包列表。
3.apt-get upgrade：升级本地可升级的全部安装包，但存在依赖问题时将不会升级，通常会在更新前执行一次update。
4.apt-get dist-upgrade：解决依赖关系并升级（存在不确定性）。
5.apt-get remove：移除已安装的安装包，包括与被移除软件包存在依赖关系的软件包，但不包含软件包的配置文件。
6.apt-get autoremove：移除之前被其他安装包依赖，但现在不再使用的软件包。
7.apt-get purge：与remove相同，但会完全移除软件包，包含其配置文件。
8.apt-get clean：移除已经被下载到本地并安装的软件包。
9.apt-get autoclean：移除已安装的软件的旧版本软件包。

apt-get参数
1.-f：修复损坏的依赖关系
2.-d：只下载不安装
3.-y：自动回应是否安装软件包的选项
4.--reinstall：重新安装已安装的但可能存在问题的软件包
——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
1.2 软件升级
实例：

sudo apt-get update    #更新软件源   
sudo apt-get upgrade    #升级没有依赖问题的软件包
sudo apt-get dist-upgrade    #升级并解决依赖关系

——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
1.3卸载软件
实例：

sudo apt-get remove    #保留配置文件的删除
sudo apt-get purge    #不保留配置文件的删除
sudo apt-get autoremove    #移除不再需要的被以来的软件包
——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
1.4软件搜索
实例：

sudo apt-cache search [软件名]    
#apt-cache针对本地数据进行相关操作的工具
#search [软件名] 在本地数据库中搜索软件
APT参考网址：https://www.debian.org/doc/manuals/apt-howto/index.zh-cn.html#contents
——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
2.dpkg
使用dpkg从本地磁盘安装deb安装包。
它可以对软件包执行打包和解包操作以及提供软件包信息。
并不会自动解决依赖关系。
常用参数：
1.-i：安装指定deb包。
2.-I：显示deb包的文件的信息。
3.-r：remove，移除已安装的软件包。
4.-R：后面加上目录名，用于安装该目录下的所有deb安装包。
5.-s：显示已安装软件的信息。
6.-S：搜索已安装的软件包
7.-L：显示已安装软件包的目录信息。
——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
2.1使用dpkg安装deb软件包
实例：

sudo apt-get -d install -y emacs    #使用-d只下载不安装emacs编辑器
sudo dpkg -i emacs.deb[软件包名]    #这里会报错，因为dpkg不能为你解决依赖关系
sudo apt-get update    #更新源
sudo apt-get -f install -y    #使用apt-get的-f参数修复依赖关系的安装
——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
2.2查看已安装软件包的安装目录
实例：

sudo dpkg -L [软件包名]
——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
2.3从二进制包安装
将二进制包解压后放到合适的目录，然后将包含可执行的主程序文件的目录添加到PATH环境变量中即可。
