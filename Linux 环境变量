1.变量
什么是环境变量？
要解释环境变量，得先明白变量是什么，准确是说shell变量，所谓变量就是计算机中用来记录一个值（可能是数值也可能是字符或者字符串）的符号，而这些符号将用于不同的运算处理中。通常变量与值是一对一的关系，可以通过表达式读取它的值并赋值给其他变量，也可以直接指定数值赋值给任意变量。
为了便于运算和处理，大部分编程语言会区分变量的类型，用于分别记录数值，字符，字符串等数据类型。

1.1创建变量
declare [变量]创建变量

1.2变量赋值
[变量]=[数值]用“=”赋值运算符

1.3查找变量的值
echo $[变量]

2.环境变量
环境变量的作用域比自定义变量大，如shell的环境变量作用于他的自身和它的子进程。

2.1三种变量类型
1.当前shell进程私有用户自定义变量，只在当前shell有效。
2.shell本身内建的变量。
3.从自定义变量导出的环境变量。

2.2打印环境变量的三个命令
set显示当前shell所有变量，包括其内建环境变量，用户自定义变量及导出的环境变量。
env显示与当前用户相关的环境变量，还可以让命令在指定环境中运行。
export显示从shell中导出成为环境变量的变量，也能通过他将自定义变量导出为环境变量。

实际案例：
temp[变量名称]=hello[变量设置值]定义一个变量
export temp_env[变量名称]=hello[变量设置值]将自定义变量导出为环境变量
参考：linux export命令详解

如何将自定义变量设置为环境变量


2.3环境变量永久生效
按照变量的生存周期来划分，变量分为两种；
1.
永久：需要修改配置文件，变量永久生效。
打开/etc/profile添加上想要添加的环境变量，这个环境变量就会变成永久的环境变量。
2.
临时性的：使用export命令即可，变量在关闭shell时失效。

3命令的查找路径与顺序
简介：我们在shell中输入一个命令，shell怎么知道去哪里找到这个命令并且执行的呢？答案就是这是通过环境变量PATH来进行搜索的。PATH保存了shell中执行的命令的搜索路径。

4.添加自定义路径到PATH环境变量
PATH路径是以：作为分隔符的！
PATH=$PATH:[路径]将自定义的绝对路径添加到PATH环境变量中，这样我们就可以在
任意目录下使用这个【自定义路径】的命令了。
但是，这样还有一个问题，它只对当前的shell有效，我一旦退出终端再打开就就会发现又失效了，有没有一种办法让我们可以让它在全局变量中有效？或者是让它每次使用的时候自动添加到到PATH中？ 有！

4.1自动执行
在每个用户的home目录中，有一个shell每次启动时都会默认执行一个配置脚本，用来初始化环境，添加一些用户自定义的环境变量等等。
zsh的配置文件是.zshrc
命令：echo "PATH=$PATH:[自定义路径]” >>.zshrc
>>表示将标准输出以追加的方式重定义到一个文件中
>表示将标准输出以覆盖的方式重定义到一个文件中
Bash的配置命令是.bashrc
命令：echo ”PATH=$PATH:[自定义路径]" >>.bashrc

5.修改和删除变量
命令
${变量名#匹配字串}从头向后开始匹配，删除符合匹配字串的最短数据
${变量名##匹配字串}从头向后开始匹配，删除符合匹配字串的最长数据
${变量名%匹配字串}从尾向前开始匹配，删除符合匹配字串的最短数据
${变量名%%匹配字串}从尾向前开始匹配，删除符合匹配字串的最长数据
unset删除变量

6.让环境变量立即生效
命令
source [配置的脚本文件]让环境变量立即生效。
